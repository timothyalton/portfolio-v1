{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/Documents/Coding/GitHub/portfolio-v1/src/components/MyForm.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Typography, Button, Grid, Box, TextareaAutosize } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    background: \"#3E3E3E\",\n    height: \"100vh\"\n  },\n  form: {\n    borderBottom: \"0px!important\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\"\n  },\n  button: {\n    marginTop: \"1rem\",\n    color: \"#7395AE\",\n    borderColor: \"#7395AE\"\n  },\n  heading: {\n    color: \"#7395AE\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\"\n  }\n}));\nconst InputField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#7395AE\"\n    },\n    \"& label\": {\n      color: \"#B1A296\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#B1A296\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#B1A296\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#B1A296\"\n      }\n    }\n  }\n})(TextField);\nconst classes = useStyles();\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const {\n      status\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      action: \"https://formspree.io/xrgydyag\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      style: {\n        borderBottom: \"0px!important\"\n      },\n      multiline: false,\n      fullWidth: true,\n      label: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      variant: \"outlined\",\n      inputProps: {\n        style: {\n          color: \"white\"\n        }\n      },\n      margin: \"dense\",\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      multiline: false,\n      fullWidth: true,\n      label: \"Email\",\n      type: \"text\",\n      name: \"email\",\n      variant: \"outlined\",\n      inputProps: {\n        style: {\n          color: \"white\"\n        }\n      },\n      margin: \"dense\",\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      multiline: true,\n      rows: \"3\",\n      rowsMax: \"20\",\n      fullWidth: true,\n      label: \"Message\",\n      type: \"text\",\n      name: \"message\",\n      variant: \"outlined\",\n      inputProps: {\n        style: {\n          color: \"white\"\n        }\n      },\n      margin: \"dense\",\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), status === \"SUCCESS\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Thanks!\") : /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      variant: \"outlined\",\n      fullWidth: true,\n      endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 24\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"contact me\"), status === \"ERROR\" && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 34\n      }\n    }, \"Ooops! There was an error.\")));\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({\n          status: \"SUCCESS\"\n        });\n      } else {\n        this.setState({\n          status: \"ERROR\"\n        });\n      }\n    };\n\n    xhr.send(data);\n  }\n\n}","map":{"version":3,"sources":["/home/mitchell/Documents/Coding/GitHub/portfolio-v1/src/components/MyForm.js"],"names":["React","useState","makeStyles","withStyles","TextField","Typography","Button","Grid","Box","TextareaAutosize","SendIcon","useStyles","theme","mainContainer","background","height","form","borderBottom","top","left","transform","position","button","marginTop","color","borderColor","heading","textAlign","textTransform","InputField","root","classes","MyForm","Component","constructor","props","submitForm","bind","state","status","render","style","ev","preventDefault","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Typography,\n  Button,\n  Grid,\n  Box,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    background: \"#3E3E3E\",\n    height: \"100vh\",\n  },\n  form: {\n    borderBottom: \"0px!important\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n  },\n  button: {\n    marginTop: \"1rem\",\n    color: \"#7395AE\",\n    borderColor: \"#7395AE\",\n  },\n  heading: {\n    color: \"#7395AE\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst InputField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#7395AE\",\n    },\n    \"& label\": {\n      color: \"#B1A296\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#B1A296\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#B1A296\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#B1A296\",\n      },\n    },\n  },\n})(TextField);\n\nconst classes = useStyles();\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <>\n        {/* <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/xrgydyag\"\n          method=\"POST\"\n        >\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" />\n          <label>Message:</label>\n          <input type=\"text\" name=\"message\" />\n          {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\n          {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n        </form> */}\n        <form\n          onSubmit={this.submitForm}\n          action=\"https://formspree.io/xrgydyag\"\n          method=\"POST\"\n        >\n          <InputField\n            style={{ borderBottom: \"0px!important\" }}\n            multiline={false}\n            fullWidth={true}\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          />\n          <br />\n\n          <InputField\n            multiline={false}\n            fullWidth={true}\n            label=\"Email\"\n            type=\"text\"\n            name=\"email\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          />\n          <br />\n\n          <InputField\n            multiline={true}\n            rows=\"3\"\n            rowsMax=\"20\"\n            fullWidth={true}\n            label=\"Message\"\n            type=\"text\"\n            name=\"message\"\n            variant=\"outlined\"\n            inputProps={{ style: { color: \"white\" } }}\n            margin=\"dense\"\n            size=\"medium\"\n          ></InputField>\n\n          <br />\n          {status === \"SUCCESS\" ? (\n            <p>Thanks!</p>\n          ) : (\n            <Button\n              className={classes.button}\n              variant=\"outlined\"\n              fullWidth={true}\n              endIcon={<SendIcon />}\n            >\n              contact me\n            </Button>\n          )}\n          {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n        </form>\n      </>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}